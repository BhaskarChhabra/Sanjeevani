import { Medication } from "../models/medicationModel.js";
import { getCurrentDayCode } from "./reminderUtils.js"; // Assume this import is correct

export const checkDueMedications = async () => {
Â  Â  const now = new Date();
Â  Â  // Format the current time into a standardized "HH:mm" string
Â  Â  const currentTimeStr = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;
Â  Â  
Â  Â  console.log(`[DEBUG] Current system time for check: ${currentTimeStr}`);

Â  Â  // ðŸ›‘ FINAL FIX: Include .populate() to ensure user data is attached ðŸ›‘
Â  Â  const meds = await Medication.find({ active: true }).populate({
Â  Â  Â  Â  path: 'user',
Â  Â  Â  Â  select: 'email username isVerified verificationMethod'
Â  Â  });
Â  Â  console.log(`[DEBUG] Total active medications fetched: ${meds.length}`);

Â  Â  const dueMeds = [];
Â  Â  const todayDayCode = getCurrentDayCode();

Â  Â  for (const med of meds) {
Â  Â  Â  Â  // If population failed (user deleted or link broken), skip early
Â  Â  Â  Â  if (!med.user || !med.user.email) {
Â  Â  Â  Â  Â  Â  // This safety check should rarely be hit now that populate is running.
Â  Â  Â  Â  Â  Â  console.log(`[SKIP] Medication ${med.pillName} has no valid user email/reference.`);
Â  Â  Â  Â  Â  Â  continue;
Â  Â  Â  Â  }

Â  Â  Â  Â  const freq = med.frequency.toLowerCase().trim();
Â  Â  Â  Â  let isDueToday = false;
Â  Â  Â  Â  
Â  Â  Â  Â  const doseTimes = Array.isArray(med.times) 
Â  Â  Â  Â  Â  Â  ? med.times 
Â  Â  Â  Â  Â  Â  : String(med.times).split(',').map(t => t.trim()).filter(t => t.length > 0);
Â  Â  Â  Â  
Â  Â  Â  Â  // --- DETERMINE IF DUE TODAY ---
Â  Â  Â  Â  if (freq.includes("as needed")) continue;

Â  Â  Â  Â  if (freq === "weekly") {
Â  Â  Â  Â  Â  Â  if (med.dayOfWeek?.includes(todayDayCode)) {
Â  Â  Â  Â  Â  Â  Â  Â  isDueToday = true;
Â  Â  Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  Â  Â  continue;
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  }
Â  Â  Â  Â  
Â  Â  Â  Â  if (freq === "daily") {
Â  Â  Â  Â  Â  Â  isDueToday = true;
Â  Â  Â  Â  }

Â  Â  Â  Â  // --- CHECK TIME MATCH ---
Â  Â  Â  Â  if (isDueToday && doseTimes.length > 0) {
Â  Â  Â  Â  Â  Â  const isTimeMatch = doseTimes.some(scheduledTime => {
Â  Â  Â  Â  Â  Â  Â  Â  return scheduledTime === currentTimeStr;
Â  Â  Â  Â  Â  Â  });

Â  Â  Â  Â  Â  Â  if (isTimeMatch) {
Â  Â  Â  Â  Â  Â  Â  Â  dueMeds.push(med);
Â  Â  Â  Â  Â  Â  Â  Â  console.log(`âœ… [DUE] Medication: ${med.pillName} is due at ${currentTimeStr}`);
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  }
Â  Â  }

Â  Â  console.log(`[DEBUG] Medications due now: ${dueMeds.length}`);
Â  Â  return dueMeds;
};